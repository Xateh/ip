plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'checkstyle'
}

repositories {
    mavenCentral()
}

java {
    // Ensure we compile and run with JDK 17 features (records, switch expressions)
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'

    String javaFxVersion = '17.0.7'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    // Point to the actual entrypoint with a main method
    mainClass.set("meep.ui.Meep")
}

shadowJar {
    archiveBaseName = "duke"
    archiveClassifier = null
}

run{
    standardInput = System.in
}

spotless {
    java {
        target 'src/**/*.java'
        importOrder()
        googleJavaFormat('1.19.2').reflowLongStrings()
        trimTrailingWhitespace()
        endWithNewline()
        indentWithTabs()
    }
}

// Basic Checkstyle setup. The default config file location is config/checkstyle/checkstyle.xml
checkstyle {
    // Use a conservative version compatible with Gradle 7.6.x
    toolVersion = '10.3.4'
    // Do not fail the build initially; change to false once the codebase is clean
    ignoreFailures = true
}

// Friendlier reports: HTML on, XML off
tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}

// Enforce formatting on CI via the standard 'check' lifecycle
tasks.named('check') {
    dependsOn 'spotlessCheck', 'checkstyleMain', 'checkstyleTest'
}
